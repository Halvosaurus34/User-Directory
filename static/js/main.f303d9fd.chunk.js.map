{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Card.js","components/SearchForm.js","components/UserDetails.js","utils/API.js","components/OmdbContainer.js","App.js","index.js"],"names":["Container","props","className","fluid","children","Row","Col","size","split","map","join","Card","heading","SearchForm","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleFormSubmit","handleFormSort","UserDetails","src","picture","alt","firstname","lastname","email","API","getUsers","axios","get","OmdbContainer","useState","resultUsers","setResultUsers","search","setSearch","a","res","console","log","data","results","event","target","preventDefault","filter","el","first","toLowerCase","indexOf","compare","b","personA","toUpperCase","personB","comparison","sort","useEffect","searchUsers","class","scope","user","thumbnail","last","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f303d9fd.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search For User by Last Name\"\n          id=\"search\"\n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary mr-2\">\n          Search\n        </button>\n        <button onClick={props.handleFormSort} className=\"btn btn-success\">\n          Sort by name\n        </button>\n\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction UserDetails(props) {\n  return (\n    <tr>\n      <td><img src={props.picture} alt={props.firstname}/></td>\n      <td>{props.firstname}</td>\n      <td>{props.lastname}</td>\n      <td>{props.email}</td>\n    </tr>\n  );\n}\n\nexport default UserDetails;\n","import axios from \"axios\";\n\nconst API ={\n    getUsers: function() {\n        return axios.get(\"https://randomuser.me/api/?results=20&nat=us\")\n    }\n}\n\nexport default API","import React, { useState, useEffect } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport UserDetail from \"./UserDetails\";\nimport API from \"../utils/API\";\nfunction OmdbContainer() {\nconst [resultUsers, setResultUsers] = useState([]);\nconst[search, setSearch] = useState(\"\");\n  useEffect( function(){\n    searchUsers()\n  }, [] ) //send in empty set of variables\n  async function searchUsers(){\n    const res = await API.getUsers()\n    console.log(res.data)\n      setResultUsers( res.data.results )\n  }\n\n  async function handleInputChange( event ){\n    console.log( `[handleINputChange] called value=${event.target.value}`)\n    //update our search variable\n    //call the 'searchUsers()' function\n    await setSearch( event.target.value )\n  }\n\n  //handle button click\n  async function handleFormSubmit(event){\n    event.preventDefault()\n    let res = resultUsers.filter( function(el) {\n      if ((el.name.first).toLowerCase().indexOf((search).toLowerCase()) !== -1) {\n        return el;\n    }})\n    setResultUsers(res)\n    console.log('search results', res)\n  }\n\n  async function handleFormSort(event){\n    event.preventDefault()\n    function compare(a, b) {\n      // Use toUpperCase() to ignore character casing\n      console.log(\"SORT\",a.name.first,b.name.first)\n      const personA = a.name.first.toUpperCase();\n      const personB = b.name.first.toUpperCase();\n    \n      let comparison = 0;\n      if (personA > personB) {\n        comparison = 1;\n      } else if (personA < personB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    let res = resultUsers.sort(compare)\n    console.log(\"clicked on sort button\")\n    setResultUsers([...res])\n    console.log(\"sort result\",resultUsers)\n    // console.log('search results', res)\n  }\n\n\n    return (\n      <Container>\n        <Row>\n           <Col size=\"md-12\">\n            <Card heading=\"Search\">\n              <SearchForm\n                value={search}\n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit}\n                handleFormSort={handleFormSort}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n           <Col size=\"md-12\">\n           <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Picture</th>\n      <th scope=\"col\">First</th>\n      <th scope=\"col\">Last</th>\n      <th scope=\"col\">Email</th>\n    </tr>\n  </thead>\n  <tbody>\n  {resultUsers.map(user=>(\n            <UserDetail \n              picture={user.picture.thumbnail}\n              firstname={user.name.first}\n              lastname={user.name.last}\n              email={user.email}\n            />\n             ))}\n  </tbody>\n  </table>\n             </Col>\n        </Row>\n      </Container>\n    );\n  }\nexport default OmdbContainer;\n","import React from \"react\";\nimport OmdbContainer from \"./components/OmdbContainer\";\n\nfunction App() {\n  return <OmdbContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}